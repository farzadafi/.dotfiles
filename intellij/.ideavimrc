""" set space as leader key in vim :)
let mapleader = " "

""" =====================================================|
""" -----------------------SETTING-----------------------|
""" =====================================================|
""" allowing users to easily comment and uncomment lines of code using commands
""" like gc or gcc for commenting out selected lines or paragraphs.
set commentary

""" enables a feature that briefly highlights the text you have just yanked (copied),
""" providing a visual indication of the yanked content to help confirm the action.
set highlightedyank

""" ensures that there are always 10 lines visible above and below the cursor when scrolling.
set scrolloff=10

""" enables incremental search, allowing the cursor to move to the next match as
""" you type your search query, providing real-time feedback on search results.
set incsearch

""" enables highlighting of all matches for the last searched pattern in IdeaVim,
""" making it easier to see search results in the text.
set hlsearch

""" enables the display of absolute line numbers for each line in the editor,
""" allowing users to easily reference and navigate to specific lines in their code or text files.
set number

""" enables relative line numbering, where the current line is displayed as 0,
""" and all other lines are numbered based on their distance from the current line
set relativenumber

""" enables the display of the current Vim mode (such as normal, insert, or visual)
""" at the bottom of the editor, helping users to identify which mode they are currently in.
set showmode

""" displays partially typed commands in the status line at the bottom of the screen.
set showcmd

""" enables case-insensitive searching in IdeaVim, but if the search pattern
""" contains any uppercase letters, it switches to case-sensitive searching.
set smartcase

""" use the system clipboard for all yank (copy) and paste operations,
""" allowing you to copy text from IdeaVim directly to the system clipboard
""" and paste it into other applications.
set clipboard+=unnamed
set clipboard+=unnamedplus

""" ----> setting specific for Idea
""" enable a feature in IdeaVim that enhances the way lines are
""" joined together in JetBrains IDEs
set ideajoin

""" determines the mode that is used when a refactoring action selects text.
""" By default, this mode is set to "select," which means that when you initiate a refactoring,
""" the editor will switch to select mode, allowing you to modify the selected text directly.
idearefactormode=keep

""" =====================================================|
""" -------------------SETTING HANDLER-------------------|
""" =====================================================|

""" this typically moves to the next item in the jump list.
sethandler <C-i> n-v-i:vim

""" This command is used to jump to the previous position in the jump list.
sethandler <C-o> n-v-i:vim

""" Used for scrolling down half a page in Vim.
sethandler <C-d> n-v-i:vim

""" This command scrolls up half a page in Vim.
sethandler <C-u> n-v-i:vim

""" =====================================================|
""" ------------------------MAPPING----------------------|
""" =====================================================|
nmap <leader>p :action SelectInProjectView<CR>
nmap <leader>g :action FindInPath<CR>
nmap <leader>d :action Debug<CR>
nmap <leader>r :action RenameElement<CR>


""" =====================================================|
""" --------- NON_RECURSIVE MAPPING IN NORMAL MODE ------|
""" =====================================================|
""" allows you to remove the inner word under the cursor while discarding
""" the deleted text instead of saving it to the clipboard.
nnoremap ciw "_ciw

""" like ciw, but remove any space after word too :)
nnoremap caw "_caw

""" allows you to change the entire line where the cursor is located
""" while discarding the deleted text instead of saving it to the clipboard.
nnoremap C "_C

""" allows you to remove the current line (or the text selected by the cc command)
""" without affecting the clipboard.
nnoremap cc "_cc

""" This allows you to copy just the text from the cursor's position to the
""" end of that line without adding a new line when pasting.
nnoremap Y y$

nnoremap m :tabnext<CR>
nnoremap M :tabp<CR>